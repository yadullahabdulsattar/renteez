{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nconst apiUrl = `${process.env.REACT_APP_API_URL}/api/signin`;\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.message);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","apiUrl","process","env","REACT_APP_API_URL","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","message","localStorage","setItem","type","payload"],"sources":["/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from './useAuthContext'\nconst apiUrl = `${process.env.REACT_APP_API_URL}/api/signin`;\n\nexport const useLogin = () => {\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const { dispatch } = useAuthContext()\n\n    const login = async (email, password) => {\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email, password })\n        })\n\n        const json = await response.json()\n\n        if (!response.ok) {\n            setIsLoading(false)\n            setError(json.message)\n        }\n\n        if (response.ok) {\n            // save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json))\n\n            // update the auth context\n            dispatch({ type: 'LOGIN', payload: json })\n            setIsLoading(false)\n        }\n    }\n    return { login, isLoading, error }\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,MAAMC,MAAM,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,aAAY;AAE5D,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEY;EAAS,CAAC,GAAGX,cAAc,CAAC,CAAC;EAErC,MAAMY,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACf,MAAM,EAAE;MACjCgB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACE,OAAO,CAAC;IAC1B;IAEA,IAAIT,QAAQ,CAACQ,EAAE,EAAE;MACb;MACAE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAAEgB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEN;MAAK,CAAC,CAAC;MAC1CZ,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EACD,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACtC,CAAC;AAAAD,EAAA,CAhCYD,QAAQ;EAAA,QAGIL,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}