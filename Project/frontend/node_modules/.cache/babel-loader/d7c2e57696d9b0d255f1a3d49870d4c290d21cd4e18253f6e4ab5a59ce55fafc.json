{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nimport { useNavigate } from 'react-router-dom';\nconst apiUrl = `${process.env.REACT_APP_API_URL}/api/listings`;\nexport const useOffer = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [retrieveOfferError, setRetrieveOfferError] = useState(false);\n  const [success, setSuccess] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    user\n  } = useAuthContext();\n  const navigate = useNavigate();\n  const createOffer = async (title, description, address, postalCode, surface, roomCount, transport, rent, charges, picture, city, elevator, electricity, water, parking, disability, internet) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        address,\n        postalCode,\n        surface,\n        roomCount,\n        transport,\n        rent,\n        charges,\n        picture,\n        city,\n        elevator,\n        electricity,\n        water,\n        parking,\n        disability,\n        internet\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.message);\n    }\n    if (response.ok) {\n      setSuccess(\"Offer created successfully\");\n      setIsLoading(false);\n      navigate(\"/profile\");\n    }\n  };\n  const editOffer = async (id, title, description, address, postalCode, surface, roomCount, transport, rent, charges, picture, city, elevator, electricity, water, parking, disability, internet) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(apiUrl + \"/\" + id, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        address,\n        postalCode,\n        surface,\n        roomCount,\n        transport,\n        rent,\n        charges,\n        ...(picture && {\n          picture\n        }),\n        city,\n        elevator,\n        electricity,\n        water,\n        parking,\n        disability,\n        internet\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.message);\n    }\n    if (response.ok) {\n      setSuccess(\"Offer edited successfully\");\n      setIsLoading(false);\n      navigate(\"/profile\");\n    }\n  };\n  const getOffer = async id => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(apiUrl + \"/\" + id);\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setRetrieveOfferError(true);\n    }\n    if (response.ok) {\n      setIsLoading(false);\n      return json;\n    }\n  };\n  const deleteOffer = async id => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(apiUrl + \"/\" + id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.message);\n    }\n    if (response.ok) {\n      setSuccess(\"Offer created successfully\");\n      setIsLoading(false);\n    }\n  };\n  return {\n    createOffer,\n    getOffer,\n    deleteOffer,\n    editOffer,\n    retrieveOfferError,\n    isLoading,\n    error,\n    success\n  };\n};\n_s(useOffer, \"zhvypdX0UcqzZb7sKIN6+wrkQzc=\", false, function () {\n  return [useAuthContext, useNavigate];\n});","map":{"version":3,"names":["useState","useAuthContext","useNavigate","apiUrl","process","env","REACT_APP_API_URL","useOffer","_s","error","setError","retrieveOfferError","setRetrieveOfferError","success","setSuccess","isLoading","setIsLoading","user","navigate","createOffer","title","description","address","postalCode","surface","roomCount","transport","rent","charges","picture","city","elevator","electricity","water","parking","disability","internet","response","fetch","method","headers","token","body","JSON","stringify","json","ok","message","editOffer","id","getOffer","deleteOffer"],"sources":["/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useOffer.js"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from './useAuthContext'\nimport { useNavigate } from 'react-router-dom';\nconst apiUrl = `${process.env.REACT_APP_API_URL}/api/listings`;\n\n\nexport const useOffer = () => {\n    const [error, setError] = useState(null)\n    const [retrieveOfferError, setRetrieveOfferError] = useState(false)\n    const [success, setSuccess] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const { user } = useAuthContext()\n    const navigate = useNavigate();\n\n    const createOffer = async (title, description, address, postalCode, surface, roomCount, transport, rent, charges, picture, city, elevator, electricity, water, parking, disability, internet) => {\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${user.token}`,\n            },\n            body: JSON.stringify({ title, description, address, postalCode, surface, roomCount, transport, rent, charges, picture, city, elevator, electricity, water, parking, disability, internet })\n        })\n\n        const json = await response.json()\n\n        if (!response.ok) {\n            setIsLoading(false)\n            setError(json.message)\n        }\n\n        if (response.ok) {\n            setSuccess(\"Offer created successfully\")\n            setIsLoading(false)\n            navigate(\"/profile\")\n        }\n    }\n\n    const editOffer = async (id, title, description, address, postalCode, surface, roomCount, transport, rent, charges, picture, city, elevator, electricity, water, parking, disability, internet) => {\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch(apiUrl + \"/\" + id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${user.token}`,\n            },\n            body: JSON.stringify({ title, description, address, postalCode, surface, roomCount, transport, rent, charges, ...(picture && { picture }), city, elevator, electricity, water, parking, disability, internet })\n        })\n\n        const json = await response.json()\n\n        if (!response.ok) {\n            setIsLoading(false)\n            setError(json.message)\n        }\n\n        if (response.ok) {\n            setSuccess(\"Offer edited successfully\")\n            setIsLoading(false)\n            navigate(\"/profile\")\n        }\n    }\n\n    const getOffer = async (id) => {\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch(apiUrl + \"/\" + id)\n\n        const json = await response.json()\n\n        if (!response.ok) {\n            setIsLoading(false)\n            setRetrieveOfferError(true)\n        }\n\n        if (response.ok) {\n            setIsLoading(false)\n            return json;\n        }\n    }\n\n\n    const deleteOffer = async (id) => {\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch(apiUrl + \"/\" + id, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${user.token}`,\n            }\n        })\n\n        const json = await response.json()\n\n        if (!response.ok) {\n            setIsLoading(false)\n            setError(json.message)\n        }\n\n        if (response.ok) {\n            setSuccess(\"Offer created successfully\")\n            setIsLoading(false)\n        }\n    }\n\n    return { createOffer, getOffer, deleteOffer, editOffer, retrieveOfferError, isLoading, error, success }\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,MAAM,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,eAAc;AAG9D,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEiB;EAAK,CAAC,GAAGhB,cAAc,CAAC,CAAC;EACjC,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,WAAW,EAAEC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,SAAS,EAAEC,SAAS,EAAEC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,KAAK;IAC7LpB,YAAY,CAAC,IAAI,CAAC;IAClBN,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAACnC,MAAM,EAAE;MACjCoC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASvB,IAAI,CAACwB,KAAM;MAC1C,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAExB,KAAK;QAAEC,WAAW;QAAEC,OAAO;QAAEC,UAAU;QAAEC,OAAO;QAAEC,SAAS;QAAEC,SAAS;QAAEC,IAAI;QAAEC,OAAO;QAAEC,OAAO;QAAEC,IAAI;QAAEC,QAAQ;QAAEC,WAAW;QAAEC,KAAK;QAAEC,OAAO;QAAEC,UAAU;QAAEC;MAAS,CAAC;IAC9L,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MACd9B,YAAY,CAAC,KAAK,CAAC;MACnBN,QAAQ,CAACmC,IAAI,CAACE,OAAO,CAAC;IAC1B;IAEA,IAAIV,QAAQ,CAACS,EAAE,EAAE;MACbhC,UAAU,CAAC,4BAA4B,CAAC;MACxCE,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,UAAU,CAAC;IACxB;EACJ,CAAC;EAED,MAAM8B,SAAS,GAAG,MAAAA,CAAOC,EAAE,EAAE7B,KAAK,EAAEC,WAAW,EAAEC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,SAAS,EAAEC,SAAS,EAAEC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,KAAK;IAC/LpB,YAAY,CAAC,IAAI,CAAC;IAClBN,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAACnC,MAAM,GAAG,GAAG,GAAG8C,EAAE,EAAE;MAC5CV,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASvB,IAAI,CAACwB,KAAM;MAC1C,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAExB,KAAK;QAAEC,WAAW;QAAEC,OAAO;QAAEC,UAAU;QAAEC,OAAO;QAAEC,SAAS;QAAEC,SAAS;QAAEC,IAAI;QAAEC,OAAO;QAAE,IAAIC,OAAO,IAAI;UAAEA;QAAQ,CAAC,CAAC;QAAEC,IAAI;QAAEC,QAAQ;QAAEC,WAAW;QAAEC,KAAK;QAAEC,OAAO;QAAEC,UAAU;QAAEC;MAAS,CAAC;IAClN,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MACd9B,YAAY,CAAC,KAAK,CAAC;MACnBN,QAAQ,CAACmC,IAAI,CAACE,OAAO,CAAC;IAC1B;IAEA,IAAIV,QAAQ,CAACS,EAAE,EAAE;MACbhC,UAAU,CAAC,2BAA2B,CAAC;MACvCE,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,UAAU,CAAC;IACxB;EACJ,CAAC;EAED,MAAMgC,QAAQ,GAAG,MAAOD,EAAE,IAAK;IAC3BjC,YAAY,CAAC,IAAI,CAAC;IAClBN,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAACnC,MAAM,GAAG,GAAG,GAAG8C,EAAE,CAAC;IAE/C,MAAMJ,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MACd9B,YAAY,CAAC,KAAK,CAAC;MACnBJ,qBAAqB,CAAC,IAAI,CAAC;IAC/B;IAEA,IAAIyB,QAAQ,CAACS,EAAE,EAAE;MACb9B,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO6B,IAAI;IACf;EACJ,CAAC;EAGD,MAAMM,WAAW,GAAG,MAAOF,EAAE,IAAK;IAC9BjC,YAAY,CAAC,IAAI,CAAC;IAClBN,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAACnC,MAAM,GAAG,GAAG,GAAG8C,EAAE,EAAE;MAC5CV,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASvB,IAAI,CAACwB,KAAM;MAC1C;IACJ,CAAC,CAAC;IAEF,MAAMI,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MACd9B,YAAY,CAAC,KAAK,CAAC;MACnBN,QAAQ,CAACmC,IAAI,CAACE,OAAO,CAAC;IAC1B;IAEA,IAAIV,QAAQ,CAACS,EAAE,EAAE;MACbhC,UAAU,CAAC,4BAA4B,CAAC;MACxCE,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAAEG,WAAW;IAAE+B,QAAQ;IAAEC,WAAW;IAAEH,SAAS;IAAErC,kBAAkB;IAAEI,SAAS;IAAEN,KAAK;IAAEI;EAAQ,CAAC;AAC3G,CAAC;AAAAL,EAAA,CA5GYD,QAAQ;EAAA,QAKAN,cAAc,EACdC,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}