[{"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/index.js":"1","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/App.js":"2","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Offer.js":"3","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Profile.js":"4","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Create.js":"5","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Login.js":"6","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Home.js":"7","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Browse.js":"8","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/components/Navbar.js":"9","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/components/Card.js":"10","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/utils/apiConfig.js":"11","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/contexts/AuthContext.js":"12","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useAuthContext.js":"13","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Signup.js":"14","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/NotFound.js":"15","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useSignup.js":"16","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useProfile.js":"17","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useField.js":"18","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useLogin.js":"19","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useLogout.js":"20","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useOffer.js":"21"},{"size":369,"mtime":1695893852849,"results":"22","hashOfConfig":"23"},{"size":1958,"mtime":1696933171690,"results":"24","hashOfConfig":"23"},{"size":3739,"mtime":1696942311775,"results":"25","hashOfConfig":"23"},{"size":5138,"mtime":1696942311776,"results":"26","hashOfConfig":"23"},{"size":10686,"mtime":1696942311775,"results":"27","hashOfConfig":"23"},{"size":1685,"mtime":1695903497534,"results":"28","hashOfConfig":"23"},{"size":416,"mtime":1696942311775,"results":"29","hashOfConfig":"23"},{"size":7177,"mtime":1696942311774,"results":"30","hashOfConfig":"23"},{"size":1395,"mtime":1696942311771,"results":"31","hashOfConfig":"23"},{"size":1889,"mtime":1696933171691,"results":"32","hashOfConfig":"23"},{"size":74,"mtime":1694858164313,"results":"33","hashOfConfig":"23"},{"size":863,"mtime":1696865128956,"results":"34","hashOfConfig":"23"},{"size":304,"mtime":1695893852848,"results":"35","hashOfConfig":"23"},{"size":3181,"mtime":1695903497534,"results":"36","hashOfConfig":"23"},{"size":384,"mtime":1696942311775,"results":"37","hashOfConfig":"23"},{"size":1166,"mtime":1696942311774,"results":"38","hashOfConfig":"23"},{"size":1725,"mtime":1696942311773,"results":"39","hashOfConfig":"23"},{"size":387,"mtime":1696942311771,"results":"40","hashOfConfig":"23"},{"size":1088,"mtime":1696942311772,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1695903497533,"results":"42","hashOfConfig":"23"},{"size":3675,"mtime":1696942311772,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4591sz",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/index.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/App.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Offer.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Profile.js",["109"],[],"import { useEffect, useState } from \"react\"\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport Card from '../components/Card';\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport useField from \"../hooks/useField\"\nimport loading from '../img/loading.svg'\nimport { useProfile } from '../hooks/useProfile'\nimport { useOffer } from \"../hooks/useOffer\"\n\nconst fetchOffersUrl = `${process.env.REACT_APP_API_URL}/api/listings/userlistings`;\nconst fetchUserInfoUrl = `${process.env.REACT_APP_API_URL}/api/user/me`;\n\nconst Profile = (props) => {\n  const firstNameInput = useField(\"text\", \"John\")\n  const lastNameInput = useField(\"text\", \"Doe\")\n  const emailInput = useField(\"email\", \"john.doe@example.com\")\n  const passwordInput = useField(\"password\", \"Enter one to edit\")\n  const phoneInput = useField(\"tel\", \"+358\")\n\n  const [offers, setOffers] = useState(null)\n  const [title, setTitle] = useState(null)\n  const [formReady, setFormReady] = useState(false)\n  const { user } = useAuthContext()\n  const { action } = props;\n  const { id } = useParams();\n  const { editProfile, error, isLoading, success, deleteUser } = useProfile();\n  const { deleteOffer } = useOffer()\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchOffers = async () => {\n      const response = await fetch(fetchOffersUrl, {\n        headers: {\n          'Authorization': `Bearer ${user.token}`\n        }\n      })\n      const json = await response.json()\n\n      if (response.ok) {\n        setOffers(json)\n      }\n    }\n\n    if (action) {\n      if (action === \"delete\") {\n        if (window.confirm(\"Do you really want to delete this offer ?\\nThis action cannot be undone !\")) {\n          deleteOffer(id)\n          navigate(\"/profile\")\n        } else {\n          console.log(\"cancel\");\n          navigate(\"/profile\")\n        }\n      }\n    }\n\n    const fetchUserInfo = async () => {\n      const response = await fetch(fetchUserInfoUrl, {\n        headers: {\n          'Authorization': `Bearer ${user.token}`\n        }\n      })\n      const json = await response.json()\n\n      if (response.ok) {\n        firstNameInput.setValue(json.first_name)\n        lastNameInput.setValue(json.last_name)\n        emailInput.setValue(json.email)\n        phoneInput.setValue(json.phone)\n        setTitle(json.title)\n        setFormReady(true)\n      }\n    }\n\n    if (user) {\n      fetchOffers()\n      fetchUserInfo()\n\n    }\n  }, [user, action])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    await editProfile(title, firstNameInput.value, lastNameInput.value, emailInput.value, passwordInput.value, phoneInput.value)\n\n  }\n\n  const handleClick = () => {\n    if (window.confirm(\"Do you really want to delete your account ?\\nAll your offers will be deleted as well.\\nThis operation can't be undone !\")) {\n      deleteUser()\n    }\n  }\n\n  return (\n    <div>\n      <h2 className=\"title-second\">Your details</h2>\n\n      {error && <div className=\"banner mt-16\">{error}</div>}\n      {success && <div className=\"banner-success mt-16\">{success}</div>}\n\n      {formReady ? (\n\n        <div>\n\n          <form className=\"search-form\" onSubmit={handleSubmit}>\n\n\n            <div>\n              <label htmlFor='title'>Title</label>\n              <select className='input' id='rentPrice' name='rentPrice' value={title}\n                onChange={(e) => setTitle(e.target.value)} required>\n                <option value='' disabled>Select...</option>\n                <option value='mr'>Mr</option>\n                <option value='ms'>Ms</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor='userName'>First name</label>\n              <input {...firstNameInput}></input>\n            </div>\n            <div>\n              <label htmlFor='lastName'>Last name</label>\n              <input {...lastNameInput}></input>\n            </div>\n            <div>\n              <label htmlFor='emailAddress'>Email Address</label>\n              <input {...emailInput}></input>\n            </div>\n            <div>\n              <label htmlFor='password'>Password</label>\n              <input {...passwordInput}></input>\n            </div>\n            <div>\n              <label htmlFor='phone'>Phone</label>\n              <input {...phoneInput}></input>\n            </div>\n            <button disabled={isLoading} className=\"button\"> Update</button>\n          </form>\n\n          <button className=\"delete-account\" onClick={handleClick}>Delete account</button>\n\n        </div>\n      ) :\n        <img src={loading} className=\"loading\" alt=\"loading\" />\n      }\n\n      <hr className=\"mt-32\" />\n      <h2 className=\"title-second\">Your offers</h2>\n      {offers ? (\n        offers.length > 0 ? (\n          <div className=\"offers\">\n            {offers.map((offer) => <Card key={offer._id} offer={offer} editable=\"true\" />)}\n          </div>\n        ) : (\n          <p className=\"offer-message\">Yo have no offers</p>\n        )\n      ) : (\n        <img src={loading} className=\"loading\" alt=\"loading\" />\n      )}\n\n      <Link className=\"button mt-32\" to=\"/create\">New offer</Link>\n    </div>\n  );\n}\n\nexport default Profile;","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Create.js",["110"],[],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useEffect, useState } from \"react\"\nimport { useOffer } from \"../hooks/useOffer\"\nimport useField from '../hooks/useField';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { Navigate, useParams } from 'react-router-dom';\nimport loading from '../img/loading.svg'\n\nconst icon_warning = <FontAwesomeIcon icon={faExclamationTriangle} />\n\nconst CreatePage = (props) => {\n\n  const { action } = props;\n  const { id } = useParams();\n  const titleInput = useField(\"text\", \"Name your offer\")\n  const descriptionInput = useField(\"text\", \"Describe your property in some lines\")\n  const addressInput = useField(\"text\", \"Kirjanpitäjänkuja 4\")\n  const postalCodeInput = useField(\"text\", \"02770\")\n  const surfaceInput = useField(\"text\", \"105\")\n  const roomCountInput = useField(\"text\", \"4.5\")\n  const transportInput = useField(\"text\", \"300\")\n  const rentInput = useField(\"text\", \"479\")\n  const chargesInput = useField(\"text\", \"30\")\n  const [picture, setPicture] = useState(null);\n  const [city, setCity] = useState('')\n  const [elevator, setElevator] = useState(false);\n  const [electricity, setElectricity] = useState(false);\n  const [water, setWater] = useState(false);\n  const [parking, setParking] = useState(false);\n  const [disability, setDisability] = useState(false);\n  const [internet, setInternet] = useState(false);\n  const [pictureError, setPictureError] = useState(false);\n  const [editMode, setEditMode] = useState(false)\n\n\n  const { createOffer, editOffer, getOffer, error, retrieveOfferError, success, isLoading } = useOffer()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (editMode) {\n      await editOffer(id,\n        titleInput.value,\n        descriptionInput.value,\n        addressInput.value,\n        postalCodeInput.value,\n        surfaceInput.value,\n        roomCountInput.value,\n        transportInput.value,\n        rentInput.value,\n        chargesInput.value,\n        picture,\n        city,\n        elevator,\n        electricity,\n        water,\n        parking,\n        disability,\n        internet\n      )\n    } else {\n      await createOffer(\n        titleInput.value,\n        descriptionInput.value,\n        addressInput.value,\n        postalCodeInput.value,\n        surfaceInput.value,\n        roomCountInput.value,\n        transportInput.value,\n        rentInput.value,\n        chargesInput.value,\n        picture,\n        city,\n        elevator,\n        electricity,\n        water,\n        parking,\n        disability,\n        internet\n      )\n    }\n\n  }\n\n  const retrieveOfferInfo = async (id) => {\n\n    const offerInfo = await getOffer(id)\n    if (retrieveOfferError) {\n      <Navigate to=\"/profile\" />\n    }\n    titleInput.setValue(offerInfo.title);\n    descriptionInput.setValue(offerInfo.description);\n    addressInput.setValue(offerInfo.address)\n    postalCodeInput.setValue(offerInfo.postalCode)\n    setCity(offerInfo.city)\n    transportInput.setValue(offerInfo.transport)\n    surfaceInput.setValue(offerInfo.surface)\n    roomCountInput.setValue(offerInfo.roomCount)\n    rentInput.setValue(offerInfo.rent)\n    chargesInput.setValue(offerInfo.charges)\n    setElevator(offerInfo.elevator)\n    setElectricity(offerInfo.electricity)\n    setWater(offerInfo.water)\n    setParking(offerInfo.parking)\n    setDisability(offerInfo.disability)\n    setInternet(offerInfo.internet)\n  }\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const fileSize = file.size;\n      setPictureError(fileSize > 1e6)\n\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const imageSrc = e.target.result;\n        setPicture(imageSrc);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  useEffect(() => {\n    switch (action) {\n      case 'edit':\n        setEditMode(true)\n        retrieveOfferInfo(id);\n        break;\n      default:\n        break;\n    }\n  }, [action, id]\n  );\n\n  if (editMode && isLoading) {\n    return (\n      <div>\n        <img src={loading} className=\"loading\" alt=\"loading\" />\n      </div>\n    );\n  } else {\n    return (\n\n      <div>\n\n        <h2 className=\"form-title\">{editMode ? \"Edit your offer\" : \"Create a new offer\"}</h2>\n\n        <div className='form-container'>\n\n          {error && <div className=\"banner mt-16\">{icon_warning} {error}</div>}\n          {success && <div className=\"banner-success mt-16\">{success}</div>}\n\n          <form method=\"post\" className=\"register-form\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\n\n            <div>\n              <label htmlFor='title'>Title</label>\n              <input {...titleInput} required />\n            </div>\n\n            <div>\n              <label htmlFor='description'>Description</label>\n              <textarea rows=\"5\" {...descriptionInput} required></textarea>\n            </div>\n\n            <div className='mb-16'>\n              <label htmlFor='title'>Picture (max 1 MB) {editMode && \" - upload to replace\"}</label><br />\n              <input type=\"file\" className='mt-16' onChange={handleImageChange} accept=\"image/png, image/jpeg\" required={!editMode} />\n            </div>\n            {pictureError && (<span>The picture you provided is too heavy</span>)}\n\n            <div className='flex mb-8'>\n              <div className='flex-60 mr-16'>\n                <label htmlFor='address'>Address</label>\n                <input {...addressInput} required />\n              </div>\n              <div className='flex-10 mr-16'>\n                <label htmlFor='postalCode'>Postcode</label>\n                <input {...postalCodeInput} required pattern=\"\\d*\" maxLength=\"5\" />\n              </div>\n              <div className='flex-30'>\n                <label htmlFor='city'>City</label>\n                <select className='input' id='city' name='city' value={city} onChange={(e) => setCity(e.target.value)} required>\n                  <option value='' disabled>Choose...</option>\n                  <option value='Helsinki'>Helsinki</option>\n                  <option value='Espoo'>Espoo</option>\n                  <option value='Vantaa'>Vantaa</option>\n                </select>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor='city'>Distance to the nearest public transport stop</label>\n              <div className=\"flex\">\n                <div className=\"flex-20\">\n                  <input maxLength=\"4\" {...transportInput} required />\n                </div>\n                <div className=\"flex-10\">\n                  <span className=\"ml-16\">meters</span>\n                </div>\n                <div className=\"flex-70\"></div>\n              </div>\n            </div>\n\n            <hr />\n\n            <div className='flex'>\n              <div className='flex-50 mr-16'>\n                <label htmlFor='address'>Surface</label>\n                <div className=\"flex\">\n                  <div className=\"flex-80\">\n                    <input {...surfaceInput} required />\n                  </div>\n                  <div className=\"flex-20\">\n                    <span className=\"ml-16\">m²</span>\n                  </div>\n                </div>\n              </div>\n              <div className='flex-50'>\n                <label htmlFor='postalCode'>Room count</label>\n                <div className=\"flex\">\n                  <div className=\"flex-80\">\n                    <input {...roomCountInput} required />\n                  </div>\n                  <div className=\"flex-20\">\n                    <span className=\"ml-16\">r</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='flex'>\n              <div className='flex-50 mr-16'>\n                <label htmlFor='address'>Monthly rent</label>\n                <div className=\"flex\">\n                  <div className=\"flex-80\">\n                    <input {...rentInput} required maxLength=\"5\" />\n                  </div>\n                  <div className=\"flex-20\">\n                    <span className=\"ml-16\">€</span>\n                  </div>\n                </div>\n              </div>\n              <div className='flex-50'>\n                <label htmlFor='postalCode'>Charges amount</label>\n                <div className=\"flex\">\n                  <div className=\"flex-80\">\n                    <input {...chargesInput} maxLength=\"4\" required />\n                  </div>\n                  <div className=\"flex-20\">\n                    <span className=\"ml-16\">€</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <hr />\n\n            <div className=\"services-checks mb-32\">\n              <label htmlFor='roomCount'>Included services</label>\n\n              <ul className=\"property-details\">\n                <li>\n                  <input type=\"checkbox\" id=\"elevator\" name=\"elevator\" defaultChecked={elevator === \"true\"} onChange={(e) => setElevator(e.target.checked)} />\n                  <label htmlFor=\"elevator\">Elevator</label>\n                </li>\n                <li>\n                  <input type=\"checkbox\" id=\"electricity\" name=\"electricity\" defaultChecked={electricity === \"true\"} onChange={(e) => setElectricity(e.target.checked)} />\n                  <label htmlFor=\"electricity\">Electricity</label>\n                </li>\n                <li>\n                  <input type=\"checkbox\" id=\"water\" name=\"water\" defaultChecked={water === \"true\"} onChange={(e) => setWater(e.target.checked)} />\n                  <label htmlFor=\"water\">Water</label><br />\n                </li>\n                <li>\n                  <input type=\"checkbox\" id=\"parking\" name=\"parking\" defaultChecked={parking === \"true\"} onChange={(e) => setParking(e.target.checked)} />\n                  <label htmlFor=\"parking\">Parking</label><br />\n                </li>\n                <li>\n                  <input type=\"checkbox\" id=\"disability\" name=\"disability\" defaultChecked={disability === \"true\"} onChange={(e) => setDisability(e.target.checked)} />\n                  <label htmlFor=\"disability\">Adapted for the disabled</label><br />\n                </li>\n                <li>\n                  <input type=\"checkbox\" id=\"internet\" name=\"internet\" defaultChecked={internet === \"true\"} onChange={(e) => setInternet(e.target.checked)} />\n                  <label htmlFor=\"internet\">Internet</label>\n                </li>\n              </ul>\n            </div>\n\n\n            <button disabled={isLoading || pictureError} className=\"button\">{editMode ? \"Save changes\" : \"Create offer\"}</button>\n          </form>\n        </div >\n\n      </div >\n    );\n  }\n}\n\nexport default CreatePage;","/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Login.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Home.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Browse.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/components/Navbar.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/components/Card.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/utils/apiConfig.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/contexts/AuthContext.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useAuthContext.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/Signup.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/pages/NotFound.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useSignup.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useProfile.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useField.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useLogin.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useLogout.js",[],[],"/Users/yadullah/Documents/Metropolia/GroupWork/web-project/frontend/src/hooks/useOffer.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":79,"column":6,"nodeType":"113","endLine":79,"endColumn":20,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":136,"column":6,"nodeType":"113","endLine":136,"endColumn":18,"suggestions":"116"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deleteOffer', 'emailInput', 'firstNameInput', 'id', 'lastNameInput', 'navigate', and 'phoneInput'. Either include them or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'retrieveOfferInfo'. Either include it or remove the dependency array.",["118"],{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [user, action, deleteOffer, id, navigate, firstNameInput, lastNameInput, emailInput, phoneInput]",{"range":"123","text":"124"},"Update the dependencies array to be: [action, id, retrieveOfferInfo]",{"range":"125","text":"126"},[2422,2436],"[user, action, deleteOffer, id, navigate, firstNameInput, lastNameInput, emailInput, phoneInput]",[3970,3982],"[action, id, retrieveOfferInfo]"]